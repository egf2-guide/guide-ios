// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSError;

SWIFT_CLASS("_TtC4EGF29EGF2Graph")
@interface EGF2Graph : NSObject
@property (nonatomic) NSInteger maxPageSize;
@property (nonatomic) NSInteger defaultPageSize;
@property (nonatomic) BOOL isObjectPaginationMode;
@property (nonatomic, copy) NSDictionary<NSString *, SWIFT_METATYPE(NSObject)> * _Nonnull idsWithModelTypes;
@property (nonatomic) BOOL showCacheLogs;
@property (nonatomic, copy) NSURL * _Nullable serverURL;
@property (nonatomic, readonly) BOOL isAuthorized;
- (nullable instancetype)initWithName:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (void)objectWithId:(NSString * _Nonnull)id completion:(void (^ _Nullable)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)objectWithId:(NSString * _Nonnull)id expand:(NSArray<NSString *> * _Nonnull)expand completion:(void (^ _Nullable)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)refreshObjectWithId:(NSString * _Nonnull)id completion:(void (^ _Nullable)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)refreshObjectWithId:(NSString * _Nonnull)id expand:(NSArray<NSString *> * _Nonnull)expand completion:(void (^ _Nullable)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)userObjectWithCompletion:(void (^ _Nullable)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)createObjectWithParameters:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nullable)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)updateObjectWithId:(NSString * _Nonnull)id parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nullable)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)updateObjectWithId:(NSString * _Nonnull)id object:(NSObject * _Nonnull)object completion:(void (^ _Nullable)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)deleteObjectWithId:(NSString * _Nonnull)id completion:(void (^ _Nullable)(id _Nullable, NSError * _Nullable))completion;
- (void)createObjectWithParameters:(NSDictionary<NSString *, id> * _Nonnull)parameters forSource:(NSString * _Nonnull)source onEdge:(NSString * _Nonnull)edge completion:(void (^ _Nullable)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)addObjectWithId:(NSString * _Nonnull)id forSource:(NSString * _Nonnull)source toEdge:(NSString * _Nonnull)edge completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)deleteObjectWithId:(NSString * _Nonnull)id forSource:(NSString * _Nonnull)source fromEdge:(NSString * _Nonnull)edge completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)doesObjectWithId:(NSString * _Nonnull)id existForSource:(NSString * _Nonnull)source onEdge:(NSString * _Nonnull)edge completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
- (void)objectsForSource:(NSString * _Nonnull)source edge:(NSString * _Nonnull)edge completion:(void (^ _Nullable)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
- (void)objectsForSource:(NSString * _Nonnull)source edge:(NSString * _Nonnull)edge after:(NSString * _Nullable)after completion:(void (^ _Nullable)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
- (void)objectsForSource:(NSString * _Nonnull)source edge:(NSString * _Nonnull)edge after:(NSString * _Nullable)after expand:(NSArray<NSString *> * _Nonnull)expand completion:(void (^ _Nullable)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
- (void)objectsForSource:(NSString * _Nonnull)source edge:(NSString * _Nonnull)edge after:(NSString * _Nullable)after expand:(NSArray<NSString *> * _Nonnull)expand count:(NSInteger)count completion:(void (^ _Nullable)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
- (void)refreshObjectsForSource:(NSString * _Nonnull)source edge:(NSString * _Nonnull)edge completion:(void (^ _Nullable)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
- (void)refreshObjectsForSource:(NSString * _Nonnull)source edge:(NSString * _Nonnull)edge after:(NSString * _Nullable)after completion:(void (^ _Nullable)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
- (void)refreshObjectsForSource:(NSString * _Nonnull)source edge:(NSString * _Nonnull)edge after:(NSString * _Nullable)after expand:(NSArray<NSString *> * _Nonnull)expand completion:(void (^ _Nullable)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
- (void)refreshObjectsForSource:(NSString * _Nonnull)source edge:(NSString * _Nonnull)edge after:(NSString * _Nullable)after expand:(NSArray<NSString *> * _Nonnull)expand count:(NSInteger)count completion:(void (^ _Nullable)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
- (void)uploadFileWithData:(NSData * _Nonnull)data title:(NSString * _Nonnull)title mimeType:(NSString * _Nonnull)mimeType completion:(void (^ _Nonnull)(NSObject * _Nullable, NSError * _Nullable))completion;
- (void)uploadImageWithData:(NSData * _Nonnull)data title:(NSString * _Nonnull)title mimeType:(NSString * _Nonnull)mimeType kind:(NSString * _Nonnull)kind completion:(void (^ _Nonnull)(NSObject * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface EGF2Graph (SWIFT_EXTENSION(EGF2))
- (id _Nonnull)notificationObjectForSource:(NSString * _Nonnull)source;
- (id _Nonnull)notificationObjectForSource:(NSString * _Nonnull)source andEdge:(NSString * _Nonnull)edge;
@end

@class EGF2SearchParameters;

@interface EGF2Graph (SWIFT_EXTENSION(EGF2))
- (void)registerWithFirstName:(NSString * _Nonnull)firstName lastName:(NSString * _Nonnull)lastName email:(NSString * _Nonnull)email dateOfBirth:(NSDate * _Nonnull)dateOfBirth password:(NSString * _Nonnull)password completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)loginWithEmail:(NSString * _Nonnull)email password:(NSString * _Nonnull)password completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)logoutWithCompletion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)changeWithOldPassword:(NSString * _Nonnull)oldPassword withNewPassword:(NSString * _Nonnull)newPassword completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)restorePasswordWithEmail:(NSString * _Nonnull)email completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)resetPasswordWithToken:(NSString * _Nonnull)token newPassword:(NSString * _Nonnull)newPassword completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)verifyEmailWithToken:(NSString * _Nonnull)token completion:(void (^ _Nonnull)(id _Nullable, NSError * _Nullable))completion;
- (void)searchForObject:(NSString * _Nonnull)object after:(NSInteger)after count:(NSInteger)count expand:(NSArray<NSString *> * _Nullable)expand fields:(NSArray<NSString *> * _Nullable)fields filters:(NSDictionary<NSString *, id> * _Nullable)filters range:(NSDictionary<NSString *, id> * _Nullable)range sort:(NSArray<NSString *> * _Nullable)sort query:(NSString * _Nullable)query completion:(void (^ _Nonnull)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
- (void)searchWithParameters:(EGF2SearchParameters * _Nonnull)parameters after:(NSInteger)after count:(NSInteger)count completion:(void (^ _Nonnull)(NSArray<NSObject *> * _Nullable, NSInteger, NSError * _Nullable))completion;
@end


@interface EGF2Graph (SWIFT_EXTENSION(EGF2))
@end


SWIFT_CLASS("_TtC4EGF220EGF2SearchParameters")
@interface EGF2SearchParameters : NSObject
@property (nonatomic, copy) NSString * _Nonnull object;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable expand;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable fields;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable filters;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable range;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable sort;
@property (nonatomic, copy) NSString * _Nullable query;
+ (EGF2SearchParameters * _Nonnull)parametersWithObject:(NSString * _Nonnull)object;
- (nonnull instancetype)initWithObject:(NSString * _Nonnull)object OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface NSObject (SWIFT_EXTENSION(EGF2))
- (nonnull instancetype)copyGraphObject;
- (BOOL)isEqualWithGraphObject:(NSObject * _Nonnull)graphObject;
- (NSDictionary<NSString *, id> * _Nullable)changesFromGraphObject:(NSObject * _Nonnull)graphObject;
@end

#pragma clang diagnostic pop
